from collections import defaultdict
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        seen_letters = defaultdict(int)
        left = max_length = 0
        
        for i in range(len(s)):
            # Update left pointer
            left = max(left, seen_letters[s[i]])
            
            # Calculate and update max_length
            max_length = max(max_length, i - left + 1)
            
            # Update seen_letters
            seen_letters[s[i]] = i + 1
        
        return max_length
